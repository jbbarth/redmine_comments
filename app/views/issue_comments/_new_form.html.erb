<div id="issue_comments_form" style="width: 100%;display:none">
  <h3><%= l(:label_comment) %></h3>

  <%= labelled_form_for :journal, @issue.journals.build, url: issue_comments_path(issue_id: @issue.id), :html => { :id => "add_issue_comment_form" } do |f| %>

    <%= error_messages_for 'issue' %>
    <div class="box">

      <%= render "issue_comments/visibility_form_fields" %>

      <%= f.text_area :notes, :cols => 60, :rows => 10, :class => 'wiki-edit', :no_label => true, :id => 'issue_comment' %>
      <%= wikitoolbar_for 'issue_comment' %>

      <%= f.hidden_field :private_notes, :value => true %>

      <fieldset>
        <legend><%= l(:label_attachment_plural) %></legend>
        <div class="new-attachments" style="display:inline-block;">
          <%= render :partial => 'attachments/form', :locals => { :container => Journal.new } %>
        </div>
      </fieldset>

    </div>

    <%= submit_tag l(:button_add) %>

  <% end %>

  <div id="new_comment_preview" class="wiki"></div>
</div>
<script>
  /* override setAttachmentUploader of RedmineWysiwygEditor, in order to override the function uploader whose is inside the function initRedmineWysiwygEditor
  for replace var input = $('input:file.filedrop').first(); by this._jstEditor.closest("form").find('input:file.filedrop');
  */
  if (typeof RedmineWysiwygEditor === 'function') {
    RedmineWysiwygEditor.prototype.setAttachmentUploader = function(handler) {
      this._attachmentUploader = function(file) {
        var input = this._jstEditor.closest("form").find('input:file.filedrop');
        if (input.length > 0) {
          var sizeExceeded = uploadAndAttachFiles([file], input);

          return !sizeExceeded;
        } else {
          // For Redmine 3.3
          uploadAndAttachFiles([file], $('input:file.file_selector'));
          return true;
        }
      };
    };
  }
</script>